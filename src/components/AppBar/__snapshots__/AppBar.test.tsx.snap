// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<AppBar /> renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AppBar
    disableLink={false}
    fixed={false}
    showLogo={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Link
          href="/"
        >
          <a>
            <BrowserfulLogo
              fontColour="#404040"
              logoColour="#ff5ca3"
              showText={true}
            />
          </a>
        </Link>,
        undefined,
      ],
      "fixed": false,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <a>
            <BrowserfulLogo
              fontColour="#404040"
              logoColour="#ff5ca3"
              showText={true}
            />
          </a>,
          "href": "/",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <BrowserfulLogo
              fontColour="#404040"
              logoColour="#ff5ca3"
              showText={true}
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "fontColour": "#404040",
              "logoColour": "#ff5ca3",
              "showText": true,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "a",
        },
        "type": [Function],
      },
      undefined,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Link
            href="/"
          >
            <a>
              <BrowserfulLogo
                fontColour="#404040"
                logoColour="#ff5ca3"
                showText={true}
              />
            </a>
          </Link>,
          undefined,
        ],
        "fixed": false,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <a>
              <BrowserfulLogo
                fontColour="#404040"
                logoColour="#ff5ca3"
                showText={true}
              />
            </a>,
            "href": "/",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <BrowserfulLogo
                fontColour="#404040"
                logoColour="#ff5ca3"
                showText={true}
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "fontColour": "#404040",
                "logoColour": "#ff5ca3",
                "showText": true,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "a",
          },
          "type": [Function],
        },
        undefined,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
