// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ToggleSwitch /> renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ToggleSwitch
    defaultChecked={false}
    flexDirection="row"
    id="test-togggle-switch"
    justifyContent="flex-start"
    onChange={[Function]}
    selectColour="#ff5ca3"
    theme="light"
    type="checkbox"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <SwitchInput
          config={
            Object {
              "checked": Object {},
              "unchecked": Object {},
            }
          }
          defaultChecked={false}
          id="test-togggle-switch"
          onChange={[Function]}
          selectColour="#ff5ca3"
          type="checkbox"
        />,
        <SwitchLabel
          className="switch-label"
          htmlFor="test-togggle-switch"
        >
          <SwitchControls
            className="switch-controls"
            flexDirection="row"
            justifyContent="flex-start"
          >
            <SwitchSlider
              className="switch-slider"
              theme="light"
            />
            <span
              style={
                Object {
                  "width": "12px",
                }
              }
            />
            <SwitchText
              className="switch-text"
            />
          </SwitchControls>
        </SwitchLabel>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "config": Object {
            "checked": Object {},
            "unchecked": Object {},
          },
          "defaultChecked": false,
          "id": "test-togggle-switch",
          "name": undefined,
          "onChange": [Function],
          "selectColour": "#ff5ca3",
          "type": "checkbox",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <SwitchControls
              className="switch-controls"
              flexDirection="row"
              justifyContent="flex-start"
            >
              <SwitchSlider
                className="switch-slider"
                theme="light"
              />
              <span
                style={
                  Object {
                    "width": "12px",
                  }
                }
              />
              <SwitchText
                className="switch-text"
              />
            </SwitchControls>,
            undefined,
          ],
          "className": "switch-label",
          "htmlFor": "test-togggle-switch",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <SwitchSlider
                  className="switch-slider"
                  theme="light"
                />,
                <span
                  style={
                    Object {
                      "width": "12px",
                    }
                  }
                />,
                <SwitchText
                  className="switch-text"
                />,
              ],
              "className": "switch-controls",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "switch-slider",
                  "theme": "light",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "style": Object {
                    "width": "12px",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": "span",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": undefined,
                  "className": "switch-text",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          undefined,
        ],
        "type": [Function],
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <SwitchInput
            config={
              Object {
                "checked": Object {},
                "unchecked": Object {},
              }
            }
            defaultChecked={false}
            id="test-togggle-switch"
            onChange={[Function]}
            selectColour="#ff5ca3"
            type="checkbox"
          />,
          <SwitchLabel
            className="switch-label"
            htmlFor="test-togggle-switch"
          >
            <SwitchControls
              className="switch-controls"
              flexDirection="row"
              justifyContent="flex-start"
            >
              <SwitchSlider
                className="switch-slider"
                theme="light"
              />
              <span
                style={
                  Object {
                    "width": "12px",
                  }
                }
              />
              <SwitchText
                className="switch-text"
              />
            </SwitchControls>
          </SwitchLabel>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "config": Object {
              "checked": Object {},
              "unchecked": Object {},
            },
            "defaultChecked": false,
            "id": "test-togggle-switch",
            "name": undefined,
            "onChange": [Function],
            "selectColour": "#ff5ca3",
            "type": "checkbox",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <SwitchControls
                className="switch-controls"
                flexDirection="row"
                justifyContent="flex-start"
              >
                <SwitchSlider
                  className="switch-slider"
                  theme="light"
                />
                <span
                  style={
                    Object {
                      "width": "12px",
                    }
                  }
                />
                <SwitchText
                  className="switch-text"
                />
              </SwitchControls>,
              undefined,
            ],
            "className": "switch-label",
            "htmlFor": "test-togggle-switch",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <SwitchSlider
                    className="switch-slider"
                    theme="light"
                  />,
                  <span
                    style={
                      Object {
                        "width": "12px",
                      }
                    }
                  />,
                  <SwitchText
                    className="switch-text"
                  />,
                ],
                "className": "switch-controls",
                "flexDirection": "row",
                "justifyContent": "flex-start",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "className": "switch-slider",
                    "theme": "light",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "style": Object {
                      "width": "12px",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "span",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": undefined,
                    "className": "switch-text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            undefined,
          ],
          "type": [Function],
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": true,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
